comparison= Treatment,
) +
geom_point(data=T2.O2, aes(x=plant.mass..g, y=NER, color=Treatment)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
geom_line(aes(fill=Treatment, linetype=Treatment)) +
coord_cartesian(ylim=c(-40, 10)) +
geom_hline(yintercept=0, linetype="longdash", color = "gray") +
ylab(expression(paste("Net Respiration (", Delta, "O"[2],"%)"))) +
theme(legend.position = "right") +
Fig.formatting
# slight treatment effect (p=0.085)
# smoother significant for both burned and unburned (p<0.008)
####### Time 3
m1.NER.T3<-gam(NER ~ Treatment + s(plant.mass..g, by= Treatment), subset = Time.point=="T3", data = O2.tanks, method = "REML")
m2.NER.T3<-gam(NER ~ Treatment + s(plant.mass..g), subset = Time.point=="T3", data = O2.tanks, method = "REML")
m3.NER.T3<-gam(NER ~ s(plant.mass..g), subset = Time.point=="T3", data = O2.tanks, method = "REML")
T3.NER.AIC<-AIC(m1.NER.T3, m2.NER.T3, m3.NER.T3)
# model smmoth by factor best
summary(m1.NER.T3)
anova.gam(m1.NER.T3)
gam.check(m1.NER.T3, rep=1000)
draw(m1.NER.T3)
concrvity(m1.NER.T3)
par(mfrow = c(2, 2))
plot(m1.NER.T3, all.terms = TRUE, page=1)
# model predictions
NER.diff.T3<-plot_difference(
m1.NER.T3,
series = plant.mass..g,
difference = list(Treatment = c("burned", "unburned"))
)
###########
#plot for the model output on rawdata
NER.T3.mod.plot<-
plot_smooths(
model = m1.NER.T3,
series = plant.mass..g,
comparison = Treatment
) +
geom_point(data=T3.O2, aes(x=plant.mass..g, y=NER, color=Treatment)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
coord_cartesian(ylim=c(-40, 10)) +
geom_hline(yintercept=0, linetype="longdash", color = "gray") +
ylab(expression(paste("Net Respiration (", Delta, "O"[2],"%)"))) +
theme(legend.position = "right") +
Fig.formatting
# treatment effect (p=0.027)
# smoother significant for burned and unnburned (p<0.001)
####### Time 4
m1.NER.T4<-gam(NER ~ Treatment + s(plant.mass..g, by= Treatment), subset = Time.point=="T4", data = O2.tanks, method = "REML")
m2.NER.T4<-gam(NER ~ Treatment + s(plant.mass..g), subset = Time.point=="T4", data = O2.tanks, method = "REML")
m3.NER.T4<-gam(NER ~ s(plant.mass..g), subset = Time.point=="T4", data = O2.tanks, method = "REML")
T4.NER.AIC<-AIC(m1.NER.T4, m2.NER.T4, m3.NER.T4)
# model with global + treatment best
summary(m1.NER.T4)
anova.gam(m1.NER.T4)
gam.check(m1.NER.T4, rep=1000)
draw(m1.NER.T4)
concrvity(m1.NER.T4)
par(mfrow = c(2, 2))
plot(m1.NER.T4, all.terms = TRUE, page=1)
# model predictions
NER.diff.T4<-plot_difference(
m1.NER.T4,
series = plant.mass..g,
difference = list(Treatment = c("burned", "unburned"))
)
###########
#plot for the model output on rawdata
NER.T4.mod.plot<-
plot_smooths(
model = m1.NER.T4,
series = plant.mass..g,
comparison = Treatment
) +
geom_point(data=T4.O2, aes(x=plant.mass..g, y=NER, color=Treatment)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
coord_cartesian(ylim=c(-40, 10)) +
geom_hline(yintercept=0, linetype="longdash", color = "gray") +
ylab(expression(paste("Net Respiration (", Delta, "O"[2],"%)"))) +
theme(legend.position = "right") +
Fig.formatting
# no treatment effect (p=0.078)
# smoother significant for burned (p=0.004) but not unburned (p=0.965)
NER.mod.plot<-plot_grid(
NER.T1.mod.plot+ theme(legend.position = "none")+ ggtitle("Day-10"),
NER.T2.mod.plot+ theme(legend.position = "none")+ ggtitle("Day-31"),
NER.T3.mod.plot+ theme(legend.position = "none")+ ggtitle("Day-59"),
NER.T4.mod.plot+ theme(legend.position = "none")+ ggtitle("Day-89"), extract.legend,
rel_widths = c(8,8,8,8,3), ncol=5)
#ggsave("figures/NER.mod.plot.long.pdf", height=6, width=12)
#### model differences
NER.mod.diffs<-plot_grid(
NER.diff.T1+ theme(legend.position = "none")+ ggtitle("NER-Day-10"),
NER.diff.T2+ theme(legend.position = "none")+ ggtitle("Day-31"),
NER.diff.T3+ theme(legend.position = "none")+ ggtitle("Day-59"),
NER.diff.T4+ theme(legend.position = "none")+ ggtitle("Day-89"),
rel_widths = c(8,8,8,8), ncol=4)
#ggsave("figures/NER.mod.diffs.pdf", height=3, width=10)
AIC.NER<-bind_rows(T1.NER.AIC, T2.NER.AIC, T3.NER.AIC, T4.NER.AIC)
AIC.NER.mod<-cbind(mod.NERNEP.df, AIC.NER)
write.csv(AIC.NER.mod, "output/AIC models/AIC.NER.mod.csv")
# Chunk 35
anova.gam(m3.NER.T1)
# Chunk 36
anova.gam(m2.NER.T2)
# Chunk 37
anova.gam(m1.NER.T3)
# Chunk 38
anova.gam(m1.NER.T4)
# Chunk 39: NEP NER model plots
NEP.NER.alltimes.long<-plot_grid(
NEP.T1.mod.plot+ theme(legend.position = "none"),
NEP.T2.mod.plot+ theme(legend.position = "none"),
NEP.T3.mod.plot+ theme(legend.position = "none"),
NEP.T4.mod.plot+ theme(legend.position = "none"), extract.legend,
NER.T1.mod.plot+ theme(legend.position = "none"),
NER.T2.mod.plot+ theme(legend.position = "none"),
NER.T3.mod.plot+ theme(legend.position = "none"),
NER.T4.mod.plot+ theme(legend.position = "none"), extract.legend,
rel_widths = c(8,8,8,8,3, 8,8,8,8,3), ncol=5)
ggsave("figures/NEP.NER.alltimes.long.pdf", height=7, width=12)
NEP.NER.alltimes.long
# Chunk 40: NEP NER model diff plots
NEP.NER.mod.diffs<-plot_grid(
NEP.diff.T1+ theme(legend.position = "none"),
NEP.diff.T2+ theme(legend.position = "none"),
NEP.diff.T3+ theme(legend.position = "none"),
NEP.diff.T4+ theme(legend.position = "none"),
NER.diff.T1+ theme(legend.position = "none"),
NER.diff.T2+ theme(legend.position = "none"),
NER.diff.T3+ theme(legend.position = "none"),
NER.diff.T4+ theme(legend.position = "none"),
rel_widths = c(8,8,8,8,8,8,8,8), ncol=4)
ggsave("figures/NEP.NER.mod.diffs.pdf", height=7, width=12)
NEP.NER.mod.diffs
# Chunk 41: read in isotope data
#########  Time 1 and Time 2
topes<-read.csv("data/Isotopes/Pyro_isotopes.csv")
topes$C.N <-(topes$Total.C..ug/12)/(topes$Total.N..ug/14) # C mol : N mol
cols<-c("Time.point", "Treatment", "Type", "Tank") # columns to make factors
topes[cols] <- lapply(topes[cols], factor) # make all these factors
##### make data frames
# treatment data df
topes.trt<-topes[(topes$Treatment=="burned" | topes$Treatment=="unburned"),]
# control and start plant materials df
topes.controls<-topes[!(topes$Treatment=="burned" | topes$Treatment=="unburned"),]
# Chunk 42: isotopes CN
############# C vs N plot
#plot for the model output on rawdata
CvN.mod1.T1<-lm(Total.N..ug~Total.C..ug*Treatment, data=topes.trt[(topes.trt$Time.point=="T1"),])
CvN.mod2.T1<-lm(Total.N..ug~Total.C..ug + Treatment, data=topes.trt[(topes.trt$Time.point=="T1"),])
anova(CvN.mod1.T1,CvN.mod2.T1) # no diff, go with simple model 'CvN.mod2.T1'
Anova(CvN.mod2.T1, type=2)
CvN.T1.mod.plot<-
ggplot(data=topes.trt[(topes.trt$Time.point=="T1"),],
aes(x=Total.C..ug, y=Total.N..ug,
color=Treatment, # for the points
fill=Treatment, # for the SE
linetype=Treatment)) + #for the regression lines
geom_point(aes(shape=Type))+
geom_smooth(method = "lm", alpha =0.2, size=0.5)+
scale_color_manual(values = c("brown1", "mediumseagreen"))+
ggtitle("Time-1") +
scale_shape_manual(name="Plankton", values = c(17, 16),
labels = c(expression(paste("> 63"~mu,"m")),
expression(paste("< 63"~mu,"m")))) +
ylim(c(0,600)) +
xlim(c(0,3200)) +
ylab("Total N (ug)") +
xlab("Total C (ug)") +
Fig.formatting
#############################
### Time 2 C vs. N
#plot for the model output on rawdata
CvN.mod1.T2<-lm(Total.N..ug~Total.C..ug*Treatment, data=topes.trt[(topes.trt$Time.point=="T2"),])
CvN.mod2.T2<-lm(Total.N..ug~Total.C..ug + Treatment, data=topes.trt[(topes.trt$Time.point=="T2"),])
anova(CvN.mod1.T2,CvN.mod2.T2) # no diff, go with simple model 'CvN.mod2.T2'
Anova(CvN.mod2.T2, type=2)
CvN.T2.mod.plot<-
ggplot(data=topes.trt[(topes.trt$Time.point=="T2"),],
aes(x=Total.C..ug, y=Total.N..ug,
color=Treatment, # for the points
fill=Treatment, # for the SE
linetype=Treatment)) + #for the regression lines
geom_point(aes(shape=Type))+
geom_smooth(method = "lm", alpha =0.2, size=0.5)+
scale_color_manual(values = c("brown1", "mediumseagreen"))+
ggtitle("Time-2") +
scale_shape_manual(name="Plankton", values = c(17, 16),
labels = c(expression(paste("> 63"~mu,"m")),
expression(paste("< 63"~mu,"m")))) +
ylim(c(0,250)) +
xlim(c(0,1250)) +
ylab("Total N (ug)") +
xlab("Total C (ug)") +
Fig.formatting
# Chunk 43: CN models
############# all plankton T1
m1.T1.CN <- gam(C.N ~ Treatment + Type +
s(plant.mass..g, by=Treatment),
subset = Time.point=="T1", data=topes.trt, method="REML", family="gaussian")
m2.T1.CN <- gam(C.N ~ Treatment + Type +
s(plant.mass..g),
subset = Time.point=="T1", data=topes.trt, method="REML", family="gaussian")
m3.T1.CN <- gam(C.N ~
s(plant.mass..g),
subset = Time.point=="T1", data=topes.trt, method="REML", family="gaussian")
AIC.CN.T1<-AIC(m1.T1.CN, m2.T1.CN, m3.T1.CN)
## additive model best fit, but no treatment or type effect
summary(m1.T1.CN)
anova.gam(m1.T1.CN)
gam.check(m1.T1.CN, rep=1000)
draw(m1.T1.CN)
concrvity(m1.T1.CN)
par(mfrow = c(1, 2))
plot(m1.T1.CN, all.terms = TRUE, page=1)
# model for smoothing
msmooth.T1.CN<- gam(C.N ~ Treatment +
s(plant.mass..g, by=Treatment),
subset = Time.point=="T1", data=topes.trt, method="REML", family="gaussian")
# model predictions
CN.diff.T1<-plot_difference(
m1.T1.CN,
series = plant.mass..g,
difference = list(Treatment = c("burned", "unburned"))
)
# Chunk 44: CN models 2
###########
#plot for the model output on rawdata
CN.T1.mod.plot<-
plot_smooths(
model = msmooth.T1.CN,
series = plant.mass..g,
comparison = Treatment
)  + theme(legend.position = "none") +
geom_point(data=topes.trt[(topes.trt$Time.point=="T1"),],
aes(x=plant.mass..g, y=C.N, color=Treatment, shape=Type)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
theme(legend.position = "right") +
ggtitle("Time-1") +
coord_cartesian(ylim=c(0, 20)) +
scale_shape_manual(name="Plankton", values = c(17, 16),
labels = c(expression(paste("> 63"~mu,"m")),
expression(paste("< 63"~mu,"m")))) +
ylab("C:N") +
xlab("plant material (g)") +
Fig.formatting
#plot for the model output on rawdata
CN.T1.mod.plot<-
plot_smooths(
model = msmooth.T1.CN,
series = plant.mass..g,
comparison = Treatment
)  + theme(legend.position = "none") +
geom_point(data=topes.trt[(topes.trt$Time.point=="T1"),],
aes(x=plant.mass..g, y=C.N, color=Treatment, shape=Type)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
theme(legend.position = "right") +
ggtitle("Time-1") +
coord_cartesian(ylim=c(0, 20)) +
scale_shape_manual(name="Plankton", values = c(17, 16),
labels = c(expression(paste("> 63"~mu,"m")),
expression(paste("< 63"~mu,"m")))) +
ylab("C:N") +
xlab("plant material (g)") +
Fig.formatting
plot_smooths(
model = msmooth.T1.CN,
series = plant.mass..g,
comparison = Treatment
)
msmooth.T1.CN
anova.gam(msmooth.T1.CN)
#plot for the model output on rawdata
CN.T1.mod.plot<-
plot_smooths(
model = msmooth.T1.CN,
series = plant.mass..g,
comparison = Treatment
)  + theme(legend.position = "none") +
geom_point(data=topes.trt[(topes.trt$Time.point=="T1"),],
aes(x=plant.mass..g, y=C.N, color=Treatment, shape=Type)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
theme(legend.position = "right") +
ggtitle("Time-1") +
coord_cartesian(ylim=c(0, 20)) +
scale_shape_manual(name="Plankton", values = c(17, 16),
labels = c(expression(paste("> 63"~mu,"m")),
expression(paste("< 63"~mu,"m")))) +
ylab("C:N") +
xlab("plant material (g)") +
Fig.formatting
plot_smooths(
model = msmooth.T1.CN,
series = plant.mass..g,
comparison = Treatment
)
plot_smooths(
model = m1.NER.T4,
series = plant.mass..g,
comparison = Treatment
)
#plot for the model output on rawdata
CN.T1.mod.plot<-
plot_smooths(
model = m1.T1.CN,
series = plant.mass..g,
comparison = Treatment
)  + theme(legend.position = "none") +
geom_point(data=topes.trt[(topes.trt$Time.point=="T1"),],
aes(x=plant.mass..g, y=C.N, color=Treatment, shape=Type)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
theme(legend.position = "right") +
ggtitle("Time-1") +
coord_cartesian(ylim=c(0, 20)) +
scale_shape_manual(name="Plankton", values = c(17, 16),
labels = c(expression(paste("> 63"~mu,"m")),
expression(paste("< 63"~mu,"m")))) +
ylab("C:N") +
xlab("plant material (g)") +
Fig.formatting
topes.trt
topes.trt<-droplevels(topes.trt)
topes.trt
############# all plankton T1
m1.T1.CN <- gam(C.N ~ Treatment + Type +
s(plant.mass..g, by=Treatment),
subset = Time.point=="T1", data=topes.trt, method="REML", family="gaussian")
m2.T1.CN <- gam(C.N ~ Treatment + Type +
s(plant.mass..g),
subset = Time.point=="T1", data=topes.trt, method="REML", family="gaussian")
m3.T1.CN <- gam(C.N ~
s(plant.mass..g),
subset = Time.point=="T1", data=topes.trt, method="REML", family="gaussian")
AIC.CN.T1<-AIC(m1.T1.CN, m2.T1.CN, m3.T1.CN)
# model for smoothing
msmooth.T1.CN<- gam(C.N ~ Treatment +
s(plant.mass..g, by=Treatment),
subset = Time.point=="T1", data=topes.trt, method="REML", family="gaussian")
# model predictions
CN.diff.T1<-plot_difference(
m1.T1.CN,
series = plant.mass..g,
difference = list(Treatment = c("burned", "unburned"))
)
CN.diff.T1
#plot for the model output on rawdata
CN.T1.mod.plot<-
plot_smooths(
model = m1.T1.CN,
series = plant.mass..g,
comparison = Treatment
)  + theme(legend.position = "none") +
geom_point(data=topes.trt[(topes.trt$Time.point=="T1"),],
aes(x=plant.mass..g, y=C.N, color=Treatment, shape=Type)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
theme(legend.position = "right") +
ggtitle("Time-1") +
coord_cartesian(ylim=c(0, 20)) +
scale_shape_manual(name="Plankton", values = c(17, 16),
labels = c(expression(paste("> 63"~mu,"m")),
expression(paste("< 63"~mu,"m")))) +
ylab("C:N") +
xlab("plant material (g)") +
Fig.formatting
if (!require('knitr')) install.packages('knitr'); library('knitr')
knitr::opts_chunk$set(warning=FALSE, message=FALSE, fig.align='center')
######### load in packages and set global settings
# load packages
if (!require("pacman")) install.packages("pacman") # for rapid install if not in library
# use pacman to load all the packages you are missing!
pacman::p_load('knitr', 'lme4', 'lmerTest', 'tidyverse', 'magrittr', 'effects', 'plyr', 'dplyr', 'plotrix', 'car',"gridExtra", "cowplot", "tools", "mgcv", "gratia", "MASS", "stats", "tidymv", "sjstats", "coin", "emmeans")
Fig.formatting<-(theme_classic()) +
theme(text=element_text(size=10),
axis.line=element_blank(),
legend.text.align = 0,
legend.text=element_text(size=10),
#legend.title = element_blank(),
panel.border = element_rect(fill=NA, colour = "black", size=1),
aspect.ratio=1,
axis.ticks.length=unit(0.25, "cm"),
axis.text.y=element_text(
margin=unit(c(0.5, 0.5, 0.5, 0.5), "cm"), colour="black", size=10),
axis.text.x=element_text(
margin=unit(c(0.5, 0.5, 0.5, 0.5), "cm"), colour="black", size=8)) +
theme(legend.key.size = unit(0.4, "cm")) +
theme(aspect.ratio=1.3) +
theme(panel.spacing=unit(c(0, 0, 0, 0), "cm"))
plant.nut<-read.csv("data/Pyro_plant material_elemental.csv")
fac<-c("Sample.Name", "type", "plant", "treatment", "rep") # make factors
plant.nut[fac]<-lapply(plant.nut[fac],factor)
sage.nut<-plant.nut[(plant.nut$plant=="sage"),]
will.nut<-plant.nut[(plant.nut$plant=="willow"),]
### Sage ###
######### %N
plant.N.sag<-lm(N~treatment*type, data=sage.nut)
Anova(plant.N.sag, type=3) # 2 way interaction and main effects
posthoc<-emmeans(plant.N.sag, ~treatment| type)
multcomp::cld(posthoc, Letters=letters)
########## %P
plant.P.sag<-lm(P~treatment*type, data=sage.nut)
Anova(plant.P.sag, type=3) # just type
########## %K
plant.K.sag<-lm(K~treatment*type, data=sage.nut)
Anova(plant.K.sag, type=3) # type and treatment
posthoc<-emmeans(plant.K.sag, ~treatment)
multcomp::cld(posthoc, Letters=letters)
########## %S
plant.S.sag<-lm(S~treatment*type, data=sage.nut)
Anova(plant.S.sag, type=3) # type effect
############## Zn ppm
plant.ZN.sag<-lm(ZN~treatment*type, data=sage.nut)
Anova(plant.ZN.sag, type=3) #no effect
posthoc<-emmeans(plant.ZN.sag, ~treatment| type)
multcomp::cld(posthoc, Letters=letters)
###############################################
### Willow ###
######### %N
plant.N.wil<-lm(N~treatment*type, data=will.nut)
Anova(plant.N.wil, type=3) #  main effects
posthoc<-emmeans(plant.N.wil, ~treatment)
multcomp::cld(posthoc, Letters=letters)
########## %P
plant.P.wil<-lm(P~treatment*type, data=will.nut)
Anova(plant.P.wil, type=3) # type and treatment
posthoc<-emmeans(plant.P.wil, ~treatment)
multcomp::cld(posthoc, Letters=letters)
########## %K
plant.K.wil<-lm(K~treatment*type, data=will.nut)
Anova(plant.K.wil, type=3) # type and treatment
posthoc<-emmeans(plant.K.wil, ~treatment)
multcomp::cld(posthoc, Letters=letters)
########## %S
plant.S.wil<-lm(S~treatment*type, data=will.nut)
Anova(plant.S.wil, type=3) # main and interactions
posthoc<-emmeans(plant.S.wil, ~treatment| type)
multcomp::cld(posthoc, Letters=letters)
############## Zn ppm
plant.ZN.wil<-lm(ZN~treatment*type, data=will.nut)
Anova(plant.ZN.wil, type=3) #no effect
posthoc<-emmeans(plant.ZN.wil, ~treatment| type)
multcomp::cld(posthoc, Letters=letters)
###############################################
### Willow ###
######### %N
plant.N.wil<-lm(N~treatment*type, data=will.nut)
Anova(plant.N.wil, type=3) #  main effects
DOC.T0.mod.plot
DOC.T0.mod.plot<-
plot_smooths(
model = m3.DOC.T0,
series = plant.mass..g,
) +
geom_point(data=DOC.df[(DOC.df$Time.point=="T0"),],
aes(x=plant.mass..g, y=DOC..mg.L, color=Treatment)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
coord_cartesian(ylim=c(0, 5)) +
ggtitle("Day-0") +
ylab("DOC (mg/L)") +
xlab("plant material (g)") +
Fig.formatting
m3.DOC.T0<-gam(DOC..mg.L ~  s(plant.mass..g), subset = Time.point=="T0", data = DOC.df, method = "REML")
###########
#plot for the model output on rawdata
DOC.T0.mod.plot<-
plot_smooths(
model = m3.DOC.T0,
series = plant.mass..g,
) +
geom_point(data=DOC.df[(DOC.df$Time.point=="T0"),],
aes(x=plant.mass..g, y=DOC..mg.L, color=Treatment)) +
scale_color_manual(values = c("brown1", "mediumseagreen")) +
coord_cartesian(ylim=c(0, 5)) +
ggtitle("Day-0") +
ylab("DOC (mg/L)") +
xlab("plant material (g)") +
Fig.formatting
DOC.T0.mod.plot
if (!require('knitr')) install.packages('knitr'); library('knitr')
knitr::opts_chunk$set(warning=FALSE, message=FALSE, fig.align='center')
######### load in packages and set global settings
# load packages
if (!require("pacman")) install.packages("pacman") # for rapid install if not in library
# use pacman to load all the packages you are missing!
pacman::p_load('knitr', 'lme4', 'lmerTest', 'tidyverse', 'magrittr', 'effects', 'plyr', 'dplyr', 'plotrix', 'car',"gridExtra", "cowplot", "tools", "mgcv", "gratia", "MASS", "stats", "tidymv", "sjstats", "coin", "emmeans")
Fig.formatting<-(theme_classic()) +
theme(text=element_text(size=10),
axis.line=element_blank(),
legend.text.align = 0,
legend.text=element_text(size=10),
#legend.title = element_blank(),
panel.border = element_rect(fill=NA, colour = "black", size=1),
aspect.ratio=1,
axis.ticks.length=unit(0.25, "cm"),
axis.text.y=element_text(
margin=unit(c(0.5, 0.5, 0.5, 0.5), "cm"), colour="black", size=10),
axis.text.x=element_text(
margin=unit(c(0.5, 0.5, 0.5, 0.5), "cm"), colour="black", size=8)) +
theme(legend.key.size = unit(0.4, "cm")) +
theme(aspect.ratio=1.3) +
theme(panel.spacing=unit(c(0, 0, 0, 0), "cm"))
phos.diff.T2
phos.plots<-plot_grid(phos.T2.mod.plot, phos.diff.T2, ncol=2)
ggsave("figures/phos.plots.pdf", height=4, width=8)
phos.plots<-plot_grid(phos.T2.mod.plot, phos.diff.T2, ncol=2, rel_widths = c(8,5)
## AIC table
mod.phos<-rep(c("Treatment + s(plant.mass..g, by=Treatment)",
phos.plots<-plot_grid(phos.T2.mod.plot, phos.diff.T2, ncol=2, rel_widths = c(8,5))
ggsave("figures/phos.plots.pdf", height=4, width=8)
phos.plots<-plot_grid(phos.T2.mod.plot, phos.diff.T2, ncol=2, rel_widths = c(8,5.5))
ggsave("figures/phos.plots.pdf", height=4, width=8)
